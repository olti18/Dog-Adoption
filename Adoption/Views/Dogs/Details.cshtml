@using Adoption.Models
@using Microsoft.AspNetCore.Identity
@using Adoption.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model DogDetailsViewModel

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>@Model.Dog.Name</h2>
            <p>Breed: @Model.Dog.Breeds.Name</p>
            <p>Gender: @Model.Dog.Gender</p>
            <img src="@Model.Dog.ImageUrl" class="img-fluid" />

            <h3>Comments</h3>
            @foreach (var comment in Model.Comments)
            {
                <div class="comment">
                    <strong>@comment.User.UserName</strong> @comment.CreatedAt.ToShortDateString()
                    <p>@comment.Content</p>
                    @if (User.Identity.IsAuthenticated && (comment.UserId == UserManager.GetUserId(User) || User.IsInRole("Admin")))
                    {
                        <form asp-action="DeleteComment" asp-controller="Comments" method="post" style="display:inline">
                            <input type="hidden" name="commentId" value="@comment.CommentId" />
                            <button type="submit" class="btn btn-link text-danger">Delete</button>
                        </form>
                    }
                </div>
            }

            @if (User.Identity.IsAuthenticated)
            {
                <h3>Add a Comment</h3>
                <form asp-action="AddComment" asp-controller="Comments" method="post">
                    <div class="form-group">
                        <textarea name="content" class="form-control"></textarea>
                        <input type="hidden" name="dogId" value="@Model.NewComment.DogId" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
                <div>
                    <a asp-controller="AdoptionRequest" asp-action="Create" asp-route-dogId="@Model.Dog.Id" class="btn btn-success">Adopt Me</a>
                </div>
            }
            else
            {
                <p><a asp-area="Identity" asp-page="/Account/Login">Log in</a> to add a comment.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@*@using AdoptionContext.Models
@using Microsoft.AspNetCore.Identity

@using Adoption.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model DogDetailsViewModel


<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>@Model.Dog.Name</h2>
            <p>Breed: @Model.Dog.Breeds.Name</p>
            <p>Gender: @Model.Dog.Gender</p>
            <img src="@Model.Dog.ImageUrl" class="img-fluid" />

            <h3>Comments</h3>
            @foreach (var comment in Model.Comments)
            {
                <div class="comment">
                    <strong>@comment.User.UserName</strong> @comment.CreatedAt.ToShortDateString()
                    <p>@comment.Content</p>
                    @if (User.Identity.IsAuthenticated && (comment.UserId == UserManager.GetUserId(User) || User.IsInRole("Admin")))
                    {
                        <form asp-action="DeleteComment" asp-controller="Comments" method="post" style="display:inline">
                            <input type="hidden" name="commentId" value="@comment.CommentId" />
                            <button type="submit" class="btn btn-link text-danger">Delete</button>
                        </form>
                    }
                </div>
            }

            @if (User.Identity.IsAuthenticated)
            {
                <h3>Add a Comment</h3>
                <form asp-action="AddComment" asp-controller="Comments" method="post">
                    <div class="form-group">
                        <textarea name="content" class="form-control"></textarea>
                        <input type="hidden" name="dogId" value="@Model.NewComment.DogId" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
                <div>
                    <a asp-controller="AdoptionRequests" asp-action="Create" asp-route-dogId="@Model.DogId" class="btn btn-success">Adopt Me</a>
                </div>
                <a asp-controller="AdoptionRequests" asp-action="Create" asp-route-dogId="@Model.Id" class="btn btn-success">Adopt Me</a>
                
            }
            else
            {
                <p><a asp-area="Identity" asp-page="/Account/Login">Log in</a> to add a comment.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}*@


@*@model Adoption.Models.Dog

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Dog</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Color)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Color)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Weight)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Weight)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Height)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Height)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageUrl)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Breeds)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Breeds.Description)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
*@